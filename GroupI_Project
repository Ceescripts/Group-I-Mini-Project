{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPQER5ZOzFx48OELujS7y9l"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H2fE5dTTII-Z","executionInfo":{"status":"ok","timestamp":1755429243910,"user_tz":-60,"elapsed":9309,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"406a6fc2-66a3-4aae-cd1e-644d01924f04"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["# Mount Google Drive to access files stored in Drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# Import necessary libraries for data manipulation, analysis, and visualization\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["# Load the dataset from a CSV file into a pandas DataFrame\n","df = pd.read_csv('/content/drive/MyDrive/laptop_price.csv', encoding='latin-1')"],"metadata":{"id":"X9rBoF5BI3pd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Display the first 5 rows of the dataframe\n","df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"H5DjnY_0J50-","executionInfo":{"status":"ok","timestamp":1755429251239,"user_tz":-60,"elapsed":196,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"c73d5ea8-8d8c-440d-bd99-af0e1f3ec543"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   laptop_ID Company      Product   TypeName  Inches  \\\n","0          1   Apple  MacBook Pro  Ultrabook    13.3   \n","1          2   Apple  Macbook Air  Ultrabook    13.3   \n","2          3      HP       250 G6   Notebook    15.6   \n","3          4   Apple  MacBook Pro  Ultrabook    15.4   \n","4          5   Apple  MacBook Pro  Ultrabook    13.3   \n","\n","                     ScreenResolution                         Cpu   Ram  \\\n","0  IPS Panel Retina Display 2560x1600        Intel Core i5 2.3GHz   8GB   \n","1                            1440x900        Intel Core i5 1.8GHz   8GB   \n","2                   Full HD 1920x1080  Intel Core i5 7200U 2.5GHz   8GB   \n","3  IPS Panel Retina Display 2880x1800        Intel Core i7 2.7GHz  16GB   \n","4  IPS Panel Retina Display 2560x1600        Intel Core i5 3.1GHz   8GB   \n","\n","                Memory                           Gpu  OpSys  Weight  \\\n","0            128GB SSD  Intel Iris Plus Graphics 640  macOS  1.37kg   \n","1  128GB Flash Storage        Intel HD Graphics 6000  macOS  1.34kg   \n","2            256GB SSD         Intel HD Graphics 620  No OS  1.86kg   \n","3            512GB SSD            AMD Radeon Pro 455  macOS  1.83kg   \n","4            256GB SSD  Intel Iris Plus Graphics 650  macOS  1.37kg   \n","\n","   Price_euros  \n","0      1339.69  \n","1       898.94  \n","2       575.00  \n","3      2537.45  \n","4      1803.60  "],"text/html":["\n","  <div id=\"df-27f992c7-272b-4663-92b4-ef215ed3e22e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>laptop_ID</th>\n","      <th>Company</th>\n","      <th>Product</th>\n","      <th>TypeName</th>\n","      <th>Inches</th>\n","      <th>ScreenResolution</th>\n","      <th>Cpu</th>\n","      <th>Ram</th>\n","      <th>Memory</th>\n","      <th>Gpu</th>\n","      <th>OpSys</th>\n","      <th>Weight</th>\n","      <th>Price_euros</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>IPS Panel Retina Display 2560x1600</td>\n","      <td>Intel Core i5 2.3GHz</td>\n","      <td>8GB</td>\n","      <td>128GB SSD</td>\n","      <td>Intel Iris Plus Graphics 640</td>\n","      <td>macOS</td>\n","      <td>1.37kg</td>\n","      <td>1339.69</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Apple</td>\n","      <td>Macbook Air</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>1440x900</td>\n","      <td>Intel Core i5 1.8GHz</td>\n","      <td>8GB</td>\n","      <td>128GB Flash Storage</td>\n","      <td>Intel HD Graphics 6000</td>\n","      <td>macOS</td>\n","      <td>1.34kg</td>\n","      <td>898.94</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>HP</td>\n","      <td>250 G6</td>\n","      <td>Notebook</td>\n","      <td>15.6</td>\n","      <td>Full HD 1920x1080</td>\n","      <td>Intel Core i5 7200U 2.5GHz</td>\n","      <td>8GB</td>\n","      <td>256GB SSD</td>\n","      <td>Intel HD Graphics 620</td>\n","      <td>No OS</td>\n","      <td>1.86kg</td>\n","      <td>575.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>15.4</td>\n","      <td>IPS Panel Retina Display 2880x1800</td>\n","      <td>Intel Core i7 2.7GHz</td>\n","      <td>16GB</td>\n","      <td>512GB SSD</td>\n","      <td>AMD Radeon Pro 455</td>\n","      <td>macOS</td>\n","      <td>1.83kg</td>\n","      <td>2537.45</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>IPS Panel Retina Display 2560x1600</td>\n","      <td>Intel Core i5 3.1GHz</td>\n","      <td>8GB</td>\n","      <td>256GB SSD</td>\n","      <td>Intel Iris Plus Graphics 650</td>\n","      <td>macOS</td>\n","      <td>1.37kg</td>\n","      <td>1803.60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27f992c7-272b-4663-92b4-ef215ed3e22e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-27f992c7-272b-4663-92b4-ef215ed3e22e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-27f992c7-272b-4663-92b4-ef215ed3e22e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7e56a1d4-95d8-43f9-8c17-919e5bb4d6ab\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7e56a1d4-95d8-43f9-8c17-919e5bb4d6ab')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7e56a1d4-95d8-43f9-8c17-919e5bb4d6ab button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1303,\n  \"fields\": [\n    {\n      \"column\": \"laptop_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 381,\n        \"min\": 1,\n        \"max\": 1320,\n        \"num_unique_values\": 1303,\n        \"samples\": [\n          486,\n          1036,\n          303\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Company\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Apple\",\n          \"Lenovo\",\n          \"Xiaomi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 618,\n        \"samples\": [\n          \"GL72M 7RDX\",\n          \"GS73VR 7RF\",\n          \"E402WA-GA007T (E2-6110/4GB/64GB/W10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TypeName\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Ultrabook\",\n          \"Notebook\",\n          \"Workstation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inches\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4263040545691665,\n        \"min\": 10.1,\n        \"max\": 18.4,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          13.3,\n          15.6,\n          13.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ScreenResolution\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 40,\n        \"samples\": [\n          \"IPS Panel 4K Ultra HD 3840x2160\",\n          \"4K Ultra HD / Touchscreen 3840x2160\",\n          \"IPS Panel Full HD 2160x1440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cpu\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 118,\n        \"samples\": [\n          \"Intel Celeron Dual Core 3855U 1.6GHz\",\n          \"AMD A6-Series 7310 2GHz\",\n          \"Intel Core i5 3.1GHz\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ram\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"24GB\",\n          \"16GB\",\n          \"6GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Memory\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"240GB SSD\",\n          \"1.0TB HDD\",\n          \"500GB HDD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gpu\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 110,\n        \"samples\": [\n          \"AMD Radeon R7\",\n          \"AMD Radeon Pro 555\",\n          \"Intel Iris Plus Graphics 650\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OpSys\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Chrome OS\",\n          \"No OS\",\n          \"Android\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 179,\n        \"samples\": [\n          \"4.42kg\",\n          \"1.35kg\",\n          \"2.03kg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price_euros\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 699.0090425337411,\n        \"min\": 174.0,\n        \"max\": 6099.0,\n        \"num_unique_values\": 791,\n        \"samples\": [\n          1292.0,\n          389.0,\n          1798.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Display the last 5 rows of the dataframe\n","df.tail(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"twsYQwefKAiZ","executionInfo":{"status":"ok","timestamp":1755429255715,"user_tz":-60,"elapsed":146,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"01d133c1-13ab-47a0-b029-b51cdf7332e0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      laptop_ID Company                              Product  \\\n","1298       1316  Lenovo                       Yoga 500-14ISK   \n","1299       1317  Lenovo                       Yoga 900-13ISK   \n","1300       1318  Lenovo                   IdeaPad 100S-14IBR   \n","1301       1319      HP  15-AC110nv (i7-6500U/6GB/1TB/Radeon   \n","1302       1320    Asus  X553SA-XX031T (N3050/4GB/500GB/W10)   \n","\n","                TypeName  Inches                            ScreenResolution  \\\n","1298  2 in 1 Convertible    14.0   IPS Panel Full HD / Touchscreen 1920x1080   \n","1299  2 in 1 Convertible    13.3  IPS Panel Quad HD+ / Touchscreen 3200x1800   \n","1300            Notebook    14.0                                    1366x768   \n","1301            Notebook    15.6                                    1366x768   \n","1302            Notebook    15.6                                    1366x768   \n","\n","                                       Cpu   Ram              Memory  \\\n","1298            Intel Core i7 6500U 2.5GHz   4GB           128GB SSD   \n","1299            Intel Core i7 6500U 2.5GHz  16GB           512GB SSD   \n","1300  Intel Celeron Dual Core N3050 1.6GHz   2GB  64GB Flash Storage   \n","1301            Intel Core i7 6500U 2.5GHz   6GB             1TB HDD   \n","1302  Intel Celeron Dual Core N3050 1.6GHz   4GB           500GB HDD   \n","\n","                        Gpu       OpSys  Weight  Price_euros  \n","1298  Intel HD Graphics 520  Windows 10   1.8kg        638.0  \n","1299  Intel HD Graphics 520  Windows 10   1.3kg       1499.0  \n","1300      Intel HD Graphics  Windows 10   1.5kg        229.0  \n","1301     AMD Radeon R5 M330  Windows 10  2.19kg        764.0  \n","1302      Intel HD Graphics  Windows 10   2.2kg        369.0  "],"text/html":["\n","  <div id=\"df-29870379-6dbc-4a18-a118-d3e27afb6060\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>laptop_ID</th>\n","      <th>Company</th>\n","      <th>Product</th>\n","      <th>TypeName</th>\n","      <th>Inches</th>\n","      <th>ScreenResolution</th>\n","      <th>Cpu</th>\n","      <th>Ram</th>\n","      <th>Memory</th>\n","      <th>Gpu</th>\n","      <th>OpSys</th>\n","      <th>Weight</th>\n","      <th>Price_euros</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1298</th>\n","      <td>1316</td>\n","      <td>Lenovo</td>\n","      <td>Yoga 500-14ISK</td>\n","      <td>2 in 1 Convertible</td>\n","      <td>14.0</td>\n","      <td>IPS Panel Full HD / Touchscreen 1920x1080</td>\n","      <td>Intel Core i7 6500U 2.5GHz</td>\n","      <td>4GB</td>\n","      <td>128GB SSD</td>\n","      <td>Intel HD Graphics 520</td>\n","      <td>Windows 10</td>\n","      <td>1.8kg</td>\n","      <td>638.0</td>\n","    </tr>\n","    <tr>\n","      <th>1299</th>\n","      <td>1317</td>\n","      <td>Lenovo</td>\n","      <td>Yoga 900-13ISK</td>\n","      <td>2 in 1 Convertible</td>\n","      <td>13.3</td>\n","      <td>IPS Panel Quad HD+ / Touchscreen 3200x1800</td>\n","      <td>Intel Core i7 6500U 2.5GHz</td>\n","      <td>16GB</td>\n","      <td>512GB SSD</td>\n","      <td>Intel HD Graphics 520</td>\n","      <td>Windows 10</td>\n","      <td>1.3kg</td>\n","      <td>1499.0</td>\n","    </tr>\n","    <tr>\n","      <th>1300</th>\n","      <td>1318</td>\n","      <td>Lenovo</td>\n","      <td>IdeaPad 100S-14IBR</td>\n","      <td>Notebook</td>\n","      <td>14.0</td>\n","      <td>1366x768</td>\n","      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n","      <td>2GB</td>\n","      <td>64GB Flash Storage</td>\n","      <td>Intel HD Graphics</td>\n","      <td>Windows 10</td>\n","      <td>1.5kg</td>\n","      <td>229.0</td>\n","    </tr>\n","    <tr>\n","      <th>1301</th>\n","      <td>1319</td>\n","      <td>HP</td>\n","      <td>15-AC110nv (i7-6500U/6GB/1TB/Radeon</td>\n","      <td>Notebook</td>\n","      <td>15.6</td>\n","      <td>1366x768</td>\n","      <td>Intel Core i7 6500U 2.5GHz</td>\n","      <td>6GB</td>\n","      <td>1TB HDD</td>\n","      <td>AMD Radeon R5 M330</td>\n","      <td>Windows 10</td>\n","      <td>2.19kg</td>\n","      <td>764.0</td>\n","    </tr>\n","    <tr>\n","      <th>1302</th>\n","      <td>1320</td>\n","      <td>Asus</td>\n","      <td>X553SA-XX031T (N3050/4GB/500GB/W10)</td>\n","      <td>Notebook</td>\n","      <td>15.6</td>\n","      <td>1366x768</td>\n","      <td>Intel Celeron Dual Core N3050 1.6GHz</td>\n","      <td>4GB</td>\n","      <td>500GB HDD</td>\n","      <td>Intel HD Graphics</td>\n","      <td>Windows 10</td>\n","      <td>2.2kg</td>\n","      <td>369.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29870379-6dbc-4a18-a118-d3e27afb6060')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-29870379-6dbc-4a18-a118-d3e27afb6060 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-29870379-6dbc-4a18-a118-d3e27afb6060');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b48a1328-8248-4085-a261-bc7f58584bb2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b48a1328-8248-4085-a261-bc7f58584bb2')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b48a1328-8248-4085-a261-bc7f58584bb2 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"laptop_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1316,\n        \"max\": 1320,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1317,\n          1320,\n          1318\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Company\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Lenovo\",\n          \"HP\",\n          \"Asus\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Yoga 900-13ISK\",\n          \"X553SA-XX031T (N3050/4GB/500GB/W10)\",\n          \"IdeaPad 100S-14IBR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TypeName\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Notebook\",\n          \"2 in 1 Convertible\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inches\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0440306508910546,\n        \"min\": 13.3,\n        \"max\": 15.6,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          14.0,\n          13.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ScreenResolution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"IPS Panel Full HD / Touchscreen 1920x1080\",\n          \"IPS Panel Quad HD+ / Touchscreen 3200x1800\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cpu\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Intel Celeron Dual Core N3050 1.6GHz\",\n          \"Intel Core i7 6500U 2.5GHz\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ram\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"16GB\",\n          \"6GB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Memory\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"512GB SSD\",\n          \"500GB HDD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gpu\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Intel HD Graphics 520\",\n          \"Intel HD Graphics\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OpSys\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Windows 10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"1.3kg\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price_euros\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 494.4043891390933,\n        \"min\": 229.0,\n        \"max\": 1499.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1499.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Display the shape of the dataframe (number of rows and columns)\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yYsYUYW7Mcy-","executionInfo":{"status":"ok","timestamp":1755429262779,"user_tz":-60,"elapsed":57,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"5fd0da44-b8a6-400d-ac92-b60a79e8144c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1303, 13)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Display the column names of the dataframe\n","df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i602c8xwMghf","executionInfo":{"status":"ok","timestamp":1755429264100,"user_tz":-60,"elapsed":62,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"54638540-066c-4d41-b146-70eec29668ea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['laptop_ID', 'Company', 'Product', 'TypeName', 'Inches',\n","       'ScreenResolution', 'Cpu', 'Ram', 'Memory', 'Gpu', 'OpSys', 'Weight',\n","       'Price_euros'],\n","      dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Display the data types of each column\n","df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":491},"id":"FyATPirCMrtX","executionInfo":{"status":"ok","timestamp":1755429265200,"user_tz":-60,"elapsed":101,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"fc72fcd9-14f7-4f19-cf57-6dccf3c698b2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["laptop_ID             int64\n","Company              object\n","Product              object\n","TypeName             object\n","Inches              float64\n","ScreenResolution     object\n","Cpu                  object\n","Ram                  object\n","Memory               object\n","Gpu                  object\n","OpSys                object\n","Weight               object\n","Price_euros         float64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>laptop_ID</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Company</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Product</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>TypeName</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Inches</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>ScreenResolution</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Cpu</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Ram</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Memory</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Gpu</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>OpSys</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Weight</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Price_euros</th>\n","      <td>float64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Display descriptive statistics for numerical columns\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"KNlJpJ6GNq9Q","executionInfo":{"status":"ok","timestamp":1755429267534,"user_tz":-60,"elapsed":90,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"162372c6-e98f-4d34-e272-8e937f0f1f72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         laptop_ID       Inches  Price_euros\n","count  1303.000000  1303.000000  1303.000000\n","mean    660.155794    15.017191  1123.686992\n","std     381.172104     1.426304   699.009043\n","min       1.000000    10.100000   174.000000\n","25%     331.500000    14.000000   599.000000\n","50%     659.000000    15.600000   977.000000\n","75%     990.500000    15.600000  1487.880000\n","max    1320.000000    18.400000  6099.000000"],"text/html":["\n","  <div id=\"df-051b368b-f8f2-417f-a362-efdfd76f0c91\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>laptop_ID</th>\n","      <th>Inches</th>\n","      <th>Price_euros</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1303.000000</td>\n","      <td>1303.000000</td>\n","      <td>1303.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>660.155794</td>\n","      <td>15.017191</td>\n","      <td>1123.686992</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>381.172104</td>\n","      <td>1.426304</td>\n","      <td>699.009043</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>10.100000</td>\n","      <td>174.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>331.500000</td>\n","      <td>14.000000</td>\n","      <td>599.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>659.000000</td>\n","      <td>15.600000</td>\n","      <td>977.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>990.500000</td>\n","      <td>15.600000</td>\n","      <td>1487.880000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1320.000000</td>\n","      <td>18.400000</td>\n","      <td>6099.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-051b368b-f8f2-417f-a362-efdfd76f0c91')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-051b368b-f8f2-417f-a362-efdfd76f0c91 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-051b368b-f8f2-417f-a362-efdfd76f0c91');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-30ff0fd2-3844-4b0b-9301-d152174a2d28\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-30ff0fd2-3844-4b0b-9301-d152174a2d28')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-30ff0fd2-3844-4b0b-9301-d152174a2d28 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"laptop_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 472.29591261766643,\n        \"min\": 1.0,\n        \"max\": 1320.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          660.1557943207981,\n          659.0,\n          1303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inches\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 456.1568872675214,\n        \"min\": 1.4263040545691665,\n        \"max\": 1303.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1303.0,\n          15.017191097467379,\n          15.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price_euros\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1881.86130562464,\n        \"min\": 174.0,\n        \"max\": 6099.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1123.6869915579432,\n          977.0,\n          1303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Display descriptive statistics for object (categorical) columns\n","df.describe(include= 'object')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":247},"id":"EKV2uhzyN8sd","executionInfo":{"status":"ok","timestamp":1755429270537,"user_tz":-60,"elapsed":160,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"ebd60c5a-ad62-4a0e-f0f5-52b84fb4956b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Company Product  TypeName   ScreenResolution  \\\n","count     1303    1303      1303               1303   \n","unique      19     618         6                 40   \n","top       Dell  XPS 13  Notebook  Full HD 1920x1080   \n","freq       297      30       727                507   \n","\n","                               Cpu   Ram     Memory                    Gpu  \\\n","count                         1303  1303       1303                   1303   \n","unique                         118     9         39                    110   \n","top     Intel Core i5 7200U 2.5GHz   8GB  256GB SSD  Intel HD Graphics 620   \n","freq                           190   619        412                    281   \n","\n","             OpSys Weight  \n","count         1303   1303  \n","unique           9    179  \n","top     Windows 10  2.2kg  \n","freq          1072    121  "],"text/html":["\n","  <div id=\"df-754eff97-741f-4022-856f-ef5799f3c22f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Company</th>\n","      <th>Product</th>\n","      <th>TypeName</th>\n","      <th>ScreenResolution</th>\n","      <th>Cpu</th>\n","      <th>Ram</th>\n","      <th>Memory</th>\n","      <th>Gpu</th>\n","      <th>OpSys</th>\n","      <th>Weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1303</td>\n","      <td>1303</td>\n","      <td>1303</td>\n","      <td>1303</td>\n","      <td>1303</td>\n","      <td>1303</td>\n","      <td>1303</td>\n","      <td>1303</td>\n","      <td>1303</td>\n","      <td>1303</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>19</td>\n","      <td>618</td>\n","      <td>6</td>\n","      <td>40</td>\n","      <td>118</td>\n","      <td>9</td>\n","      <td>39</td>\n","      <td>110</td>\n","      <td>9</td>\n","      <td>179</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>Dell</td>\n","      <td>XPS 13</td>\n","      <td>Notebook</td>\n","      <td>Full HD 1920x1080</td>\n","      <td>Intel Core i5 7200U 2.5GHz</td>\n","      <td>8GB</td>\n","      <td>256GB SSD</td>\n","      <td>Intel HD Graphics 620</td>\n","      <td>Windows 10</td>\n","      <td>2.2kg</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>297</td>\n","      <td>30</td>\n","      <td>727</td>\n","      <td>507</td>\n","      <td>190</td>\n","      <td>619</td>\n","      <td>412</td>\n","      <td>281</td>\n","      <td>1072</td>\n","      <td>121</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-754eff97-741f-4022-856f-ef5799f3c22f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-754eff97-741f-4022-856f-ef5799f3c22f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-754eff97-741f-4022-856f-ef5799f3c22f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a2425d46-c184-4022-91c6-da6473bcc0e1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2425d46-c184-4022-91c6-da6473bcc0e1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a2425d46-c184-4022-91c6-da6473bcc0e1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Company\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          19,\n          \"297\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          618,\n          \"30\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TypeName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          6,\n          \"727\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ScreenResolution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          40,\n          \"507\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cpu\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          118,\n          \"190\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ram\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          9,\n          \"619\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Memory\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          39,\n          \"412\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gpu\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          110,\n          \"281\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OpSys\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          9,\n          \"1072\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          179,\n          \"121\",\n          \"1303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"36f8fe49","executionInfo":{"status":"ok","timestamp":1755429271556,"user_tz":-60,"elapsed":67,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"b597ea44-d91c-4057-ce08-a0c40cb11af9"},"source":["# Display information about the dataframe, including the data types and non-null counts\n","df.info()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1303 entries, 0 to 1302\n","Data columns (total 13 columns):\n"," #   Column            Non-Null Count  Dtype  \n","---  ------            --------------  -----  \n"," 0   laptop_ID         1303 non-null   int64  \n"," 1   Company           1303 non-null   object \n"," 2   Product           1303 non-null   object \n"," 3   TypeName          1303 non-null   object \n"," 4   Inches            1303 non-null   float64\n"," 5   ScreenResolution  1303 non-null   object \n"," 6   Cpu               1303 non-null   object \n"," 7   Ram               1303 non-null   object \n"," 8   Memory            1303 non-null   object \n"," 9   Gpu               1303 non-null   object \n"," 10  OpSys             1303 non-null   object \n"," 11  Weight            1303 non-null   object \n"," 12  Price_euros       1303 non-null   float64\n","dtypes: float64(2), int64(1), object(10)\n","memory usage: 132.5+ KB\n"]}]},{"cell_type":"code","source":["# Check for missing values in each column\n","df.isnull().sum()"],"metadata":{"id":"dMT7_U_pKJxD","executionInfo":{"status":"ok","timestamp":1755429273778,"user_tz":-60,"elapsed":75,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"6b16a818-057a-42d8-dedc-5286cb6452ca","colab":{"base_uri":"https://localhost:8080/","height":491}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["laptop_ID           0\n","Company             0\n","Product             0\n","TypeName            0\n","Inches              0\n","ScreenResolution    0\n","Cpu                 0\n","Ram                 0\n","Memory              0\n","Gpu                 0\n","OpSys               0\n","Weight              0\n","Price_euros         0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>laptop_ID</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Company</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Product</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>TypeName</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Inches</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ScreenResolution</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cpu</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Ram</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Memory</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Gpu</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>OpSys</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Weight</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Price_euros</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Check for duplicate rows in the dataframe\n","df.duplicated().sum()"],"metadata":{"id":"i_Ci9l0dOias","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1755429278825,"user_tz":-60,"elapsed":26,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"d136bc4a-5f68-45e2-ed9a-c8bfbd478fda"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(0)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Check for duplicate column names\n","df.columns.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6EUz-3v1QhWQ","executionInfo":{"status":"ok","timestamp":1755429281416,"user_tz":-60,"elapsed":64,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"fdea5fdd-6339-4677-c79f-b1917d9e8bd8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(0)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# Strip leading/trailing whitespace from column names and convert them to lowercase\n","df.columns = df.columns.str.strip().str.lower()\n","# Print the updated column names\n","print(df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DnArCp_5QoF4","executionInfo":{"status":"ok","timestamp":1755429282703,"user_tz":-60,"elapsed":70,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"f766b1a0-bd55-41bc-ddd9-454437543d10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['laptop_id', 'company', 'product', 'typename', 'inches',\n","       'screenresolution', 'cpu', 'ram', 'memory', 'gpu', 'opsys', 'weight',\n","       'price_euros'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["# Convert 'laptop_id' column to string type as it is an identifier and not a numerical value\n","df['laptop_id'] = df['laptop_id'].astype(str)\n","\n","# Display information about the dataframe to confirm the change in data type\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VneTnCrNS_Mz","executionInfo":{"status":"ok","timestamp":1755429287194,"user_tz":-60,"elapsed":79,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"152018e7-9e22-409c-9493-3fa11021af2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1303 entries, 0 to 1302\n","Data columns (total 13 columns):\n"," #   Column            Non-Null Count  Dtype  \n","---  ------            --------------  -----  \n"," 0   laptop_id         1303 non-null   object \n"," 1   company           1303 non-null   object \n"," 2   product           1303 non-null   object \n"," 3   typename          1303 non-null   object \n"," 4   inches            1303 non-null   float64\n"," 5   screenresolution  1303 non-null   object \n"," 6   cpu               1303 non-null   object \n"," 7   ram               1303 non-null   object \n"," 8   memory            1303 non-null   object \n"," 9   gpu               1303 non-null   object \n"," 10  opsys             1303 non-null   object \n"," 11  weight            1303 non-null   object \n"," 12  price_euros       1303 non-null   float64\n","dtypes: float64(2), object(11)\n","memory usage: 132.5+ KB\n"]}]},{"cell_type":"code","source":["# Convert 'weight' column to float by removing 'kg' and casting to float\n","df.loc[:, 'weight_kg'] = df['weight'].str.replace('kg', '').astype(float)\n","\n","# Convert 'ram' column to integer by removing 'GB' and casting to integer\n","df.loc[:, 'ram_gb'] = df['ram'].str.replace('GB', '').astype(int)\n","\n","# Display descriptive statistics of the dataframe to show the new numerical columns\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"RbQXQa0raNRx","executionInfo":{"status":"ok","timestamp":1755429293024,"user_tz":-60,"elapsed":118,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"90396905-422c-4c67-942c-2a1ab13c5988"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            inches  price_euros    weight_kg       ram_gb\n","count  1303.000000  1303.000000  1303.000000  1303.000000\n","mean     15.017191  1123.686992     2.038734     8.382195\n","std       1.426304   699.009043     0.665475     5.084665\n","min      10.100000   174.000000     0.690000     2.000000\n","25%      14.000000   599.000000     1.500000     4.000000\n","50%      15.600000   977.000000     2.040000     8.000000\n","75%      15.600000  1487.880000     2.300000     8.000000\n","max      18.400000  6099.000000     4.700000    64.000000"],"text/html":["\n","  <div id=\"df-47f2d3f3-f7a2-47c4-867a-fe0006a5a0cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>inches</th>\n","      <th>price_euros</th>\n","      <th>weight_kg</th>\n","      <th>ram_gb</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1303.000000</td>\n","      <td>1303.000000</td>\n","      <td>1303.000000</td>\n","      <td>1303.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>15.017191</td>\n","      <td>1123.686992</td>\n","      <td>2.038734</td>\n","      <td>8.382195</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.426304</td>\n","      <td>699.009043</td>\n","      <td>0.665475</td>\n","      <td>5.084665</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>10.100000</td>\n","      <td>174.000000</td>\n","      <td>0.690000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>14.000000</td>\n","      <td>599.000000</td>\n","      <td>1.500000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>15.600000</td>\n","      <td>977.000000</td>\n","      <td>2.040000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>15.600000</td>\n","      <td>1487.880000</td>\n","      <td>2.300000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>18.400000</td>\n","      <td>6099.000000</td>\n","      <td>4.700000</td>\n","      <td>64.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47f2d3f3-f7a2-47c4-867a-fe0006a5a0cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47f2d3f3-f7a2-47c4-867a-fe0006a5a0cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47f2d3f3-f7a2-47c4-867a-fe0006a5a0cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d00cb64b-ebed-4297-8948-fcba1613ecee\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d00cb64b-ebed-4297-8948-fcba1613ecee')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d00cb64b-ebed-4297-8948-fcba1613ecee button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"inches\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 456.1568872675214,\n        \"min\": 1.4263040545691665,\n        \"max\": 1303.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1303.0,\n          15.017191097467379,\n          15.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price_euros\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1881.86130562464,\n        \"min\": 174.0,\n        \"max\": 6099.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1123.6869915579432,\n          977.0,\n          1303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight_kg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 459.97801242024707,\n        \"min\": 0.6654745997032407,\n        \"max\": 1303.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.0387336914811973,\n          2.04,\n          1303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ram_gb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 456.11479655727294,\n        \"min\": 2.0,\n        \"max\": 1303.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1303.0,\n          8.382194934765925,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Drop the original 'weight' and 'ram' columns as new converted columns have been created\n","df = df.drop(columns=['weight', 'ram'])\n","# Display the head of the dataframe to show the changes\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"jmWHUIeNbAuz","executionInfo":{"status":"ok","timestamp":1755429297690,"user_tz":-60,"elapsed":66,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"99f498f6-15ff-451f-ac80-4c8037f99b80"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  laptop_id company      product   typename  inches  \\\n","0         1   Apple  MacBook Pro  Ultrabook    13.3   \n","1         2   Apple  Macbook Air  Ultrabook    13.3   \n","2         3      HP       250 G6   Notebook    15.6   \n","3         4   Apple  MacBook Pro  Ultrabook    15.4   \n","4         5   Apple  MacBook Pro  Ultrabook    13.3   \n","\n","                     screenresolution                         cpu  \\\n","0  IPS Panel Retina Display 2560x1600        Intel Core i5 2.3GHz   \n","1                            1440x900        Intel Core i5 1.8GHz   \n","2                   Full HD 1920x1080  Intel Core i5 7200U 2.5GHz   \n","3  IPS Panel Retina Display 2880x1800        Intel Core i7 2.7GHz   \n","4  IPS Panel Retina Display 2560x1600        Intel Core i5 3.1GHz   \n","\n","                memory                           gpu  opsys  price_euros  \\\n","0            128GB SSD  Intel Iris Plus Graphics 640  macOS      1339.69   \n","1  128GB Flash Storage        Intel HD Graphics 6000  macOS       898.94   \n","2            256GB SSD         Intel HD Graphics 620  No OS       575.00   \n","3            512GB SSD            AMD Radeon Pro 455  macOS      2537.45   \n","4            256GB SSD  Intel Iris Plus Graphics 650  macOS      1803.60   \n","\n","   weight_kg  ram_gb  \n","0       1.37       8  \n","1       1.34       8  \n","2       1.86       8  \n","3       1.83      16  \n","4       1.37       8  "],"text/html":["\n","  <div id=\"df-9a5a3b5d-836e-404b-b026-71b520dbc73d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>laptop_id</th>\n","      <th>company</th>\n","      <th>product</th>\n","      <th>typename</th>\n","      <th>inches</th>\n","      <th>screenresolution</th>\n","      <th>cpu</th>\n","      <th>memory</th>\n","      <th>gpu</th>\n","      <th>opsys</th>\n","      <th>price_euros</th>\n","      <th>weight_kg</th>\n","      <th>ram_gb</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>IPS Panel Retina Display 2560x1600</td>\n","      <td>Intel Core i5 2.3GHz</td>\n","      <td>128GB SSD</td>\n","      <td>Intel Iris Plus Graphics 640</td>\n","      <td>macOS</td>\n","      <td>1339.69</td>\n","      <td>1.37</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Apple</td>\n","      <td>Macbook Air</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>1440x900</td>\n","      <td>Intel Core i5 1.8GHz</td>\n","      <td>128GB Flash Storage</td>\n","      <td>Intel HD Graphics 6000</td>\n","      <td>macOS</td>\n","      <td>898.94</td>\n","      <td>1.34</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>HP</td>\n","      <td>250 G6</td>\n","      <td>Notebook</td>\n","      <td>15.6</td>\n","      <td>Full HD 1920x1080</td>\n","      <td>Intel Core i5 7200U 2.5GHz</td>\n","      <td>256GB SSD</td>\n","      <td>Intel HD Graphics 620</td>\n","      <td>No OS</td>\n","      <td>575.00</td>\n","      <td>1.86</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>15.4</td>\n","      <td>IPS Panel Retina Display 2880x1800</td>\n","      <td>Intel Core i7 2.7GHz</td>\n","      <td>512GB SSD</td>\n","      <td>AMD Radeon Pro 455</td>\n","      <td>macOS</td>\n","      <td>2537.45</td>\n","      <td>1.83</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>IPS Panel Retina Display 2560x1600</td>\n","      <td>Intel Core i5 3.1GHz</td>\n","      <td>256GB SSD</td>\n","      <td>Intel Iris Plus Graphics 650</td>\n","      <td>macOS</td>\n","      <td>1803.60</td>\n","      <td>1.37</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a5a3b5d-836e-404b-b026-71b520dbc73d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9a5a3b5d-836e-404b-b026-71b520dbc73d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9a5a3b5d-836e-404b-b026-71b520dbc73d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-da18d463-805f-4796-b2f0-0d78b61cba56\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da18d463-805f-4796-b2f0-0d78b61cba56')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-da18d463-805f-4796-b2f0-0d78b61cba56 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1303,\n  \"fields\": [\n    {\n      \"column\": \"laptop_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1303,\n        \"samples\": [\n          \"486\",\n          \"1036\",\n          \"303\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Apple\",\n          \"Lenovo\",\n          \"Xiaomi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 618,\n        \"samples\": [\n          \"GL72M 7RDX\",\n          \"GS73VR 7RF\",\n          \"E402WA-GA007T (E2-6110/4GB/64GB/W10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"typename\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Ultrabook\",\n          \"Notebook\",\n          \"Workstation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"inches\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4263040545691665,\n        \"min\": 10.1,\n        \"max\": 18.4,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          13.3,\n          15.6,\n          13.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"screenresolution\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 40,\n        \"samples\": [\n          \"IPS Panel 4K Ultra HD 3840x2160\",\n          \"4K Ultra HD / Touchscreen 3840x2160\",\n          \"IPS Panel Full HD 2160x1440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cpu\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 118,\n        \"samples\": [\n          \"Intel Celeron Dual Core 3855U 1.6GHz\",\n          \"AMD A6-Series 7310 2GHz\",\n          \"Intel Core i5 3.1GHz\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"memory\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"240GB SSD\",\n          \"1.0TB HDD\",\n          \"500GB HDD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gpu\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 110,\n        \"samples\": [\n          \"AMD Radeon R7\",\n          \"AMD Radeon Pro 555\",\n          \"Intel Iris Plus Graphics 650\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"opsys\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Chrome OS\",\n          \"No OS\",\n          \"Android\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price_euros\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 699.0090425337411,\n        \"min\": 174.0,\n        \"max\": 6099.0,\n        \"num_unique_values\": 791,\n        \"samples\": [\n          1292.0,\n          389.0,\n          1798.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight_kg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6654745997032407,\n        \"min\": 0.69,\n        \"max\": 4.7,\n        \"num_unique_values\": 171,\n        \"samples\": [\n          2.6,\n          2.05,\n          1.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ram_gb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 2,\n        \"max\": 64,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          24,\n          16,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# Display descriptive statistics of the dataframe to accommodate the changes\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"jBF7E-Tabjq7","executionInfo":{"status":"ok","timestamp":1755423078261,"user_tz":-60,"elapsed":114,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"b6df3410-8f55-4c41-936b-774e15aa1b5e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            inches  price_euros    weight_kg       ram_gb\n","count  1303.000000  1303.000000  1303.000000  1303.000000\n","mean     15.017191  1123.686992     2.038734     8.382195\n","std       1.426304   699.009043     0.665475     5.084665\n","min      10.100000   174.000000     0.690000     2.000000\n","25%      14.000000   599.000000     1.500000     4.000000\n","50%      15.600000   977.000000     2.040000     8.000000\n","75%      15.600000  1487.880000     2.300000     8.000000\n","max      18.400000  6099.000000     4.700000    64.000000"],"text/html":["\n","  <div id=\"df-a8d2191b-7a0e-44ca-9b93-c5d7f25cd6f9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>inches</th>\n","      <th>price_euros</th>\n","      <th>weight_kg</th>\n","      <th>ram_gb</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1303.000000</td>\n","      <td>1303.000000</td>\n","      <td>1303.000000</td>\n","      <td>1303.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>15.017191</td>\n","      <td>1123.686992</td>\n","      <td>2.038734</td>\n","      <td>8.382195</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.426304</td>\n","      <td>699.009043</td>\n","      <td>0.665475</td>\n","      <td>5.084665</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>10.100000</td>\n","      <td>174.000000</td>\n","      <td>0.690000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>14.000000</td>\n","      <td>599.000000</td>\n","      <td>1.500000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>15.600000</td>\n","      <td>977.000000</td>\n","      <td>2.040000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>15.600000</td>\n","      <td>1487.880000</td>\n","      <td>2.300000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>18.400000</td>\n","      <td>6099.000000</td>\n","      <td>4.700000</td>\n","      <td>64.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8d2191b-7a0e-44ca-9b93-c5d7f25cd6f9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8d2191b-7a0e-44ca-9b93-c5d7f25cd6f9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8d2191b-7a0e-44ca-9b93-c5d7f25cd6f9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a5a875a6-289f-4720-bf58-7d238ad6f41d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a5a875a6-289f-4720-bf58-7d238ad6f41d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a5a875a6-289f-4720-bf58-7d238ad6f41d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"inches\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 456.1568872675214,\n        \"min\": 1.4263040545691665,\n        \"max\": 1303.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1303.0,\n          15.017191097467379,\n          15.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price_euros\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1881.86130562464,\n        \"min\": 174.0,\n        \"max\": 6099.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1123.6869915579432,\n          977.0,\n          1303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight_kg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 459.97801242024707,\n        \"min\": 0.6654745997032407,\n        \"max\": 1303.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.0387336914811973,\n          2.04,\n          1303.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ram_gb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 456.11479655727294,\n        \"min\": 2.0,\n        \"max\": 1303.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1303.0,\n          8.382194934765925,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# Iterate through categorical columns and print the value counts of the top 10 most frequent values\n","categorical_columns = ['company', 'laptop_id', 'product', 'typename', 'opsys', 'cpu', 'gpu', 'memory', 'screenresolution']\n","for column in categorical_columns:\n","    print(f\"Summary of {column}:\")\n","    print(df[column].value_counts().head(10))  # Show top 10 most frequent values\n","    print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JXicKrr4XJyu","executionInfo":{"status":"ok","timestamp":1755423218660,"user_tz":-60,"elapsed":81,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"2c392fe7-e4bb-4499-cd58-2a1391a0a745"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Summary of company:\n","company\n","Dell        297\n","Lenovo      297\n","HP          274\n","Asus        158\n","Acer        103\n","MSI          54\n","Toshiba      48\n","Apple        21\n","Samsung       9\n","Mediacom      7\n","Name: count, dtype: int64\n","\n","Summary of laptop_id:\n","laptop_id\n","1320    1\n","1       1\n","2       1\n","3       1\n","4       1\n","5       1\n","6       1\n","1304    1\n","1303    1\n","1302    1\n","Name: count, dtype: int64\n","\n","Summary of product:\n","product\n","XPS 13                30\n","Inspiron 3567         29\n","250 G6                21\n","Vostro 3568           19\n","Legion Y520-15IKBN    19\n","Inspiron 5570         18\n","ProBook 450           18\n","Alienware 17          15\n","Inspiron 5567         14\n","Satellite Pro         13\n","Name: count, dtype: int64\n","\n","Summary of typename:\n","typename\n","Notebook              727\n","Gaming                205\n","Ultrabook             196\n","2 in 1 Convertible    121\n","Workstation            29\n","Netbook                25\n","Name: count, dtype: int64\n","\n","Summary of opsys:\n","opsys\n","Windows 10      1072\n","No OS             66\n","Linux             62\n","Windows 7         45\n","Chrome OS         27\n","macOS             13\n","Mac OS X           8\n","Windows 10 S       8\n","Android            2\n","Name: count, dtype: int64\n","\n","Summary of cpu:\n","cpu\n","Intel Core i5 7200U 2.5GHz     190\n","Intel Core i7 7700HQ 2.8GHz    146\n","Intel Core i7 7500U 2.7GHz     134\n","Intel Core i7 8550U 1.8GHz      73\n","Intel Core i5 8250U 1.6GHz      72\n","Intel Core i5 6200U 2.3GHz      68\n","Intel Core i3 6006U 2GHz        64\n","Intel Core i7 6500U 2.5GHz      49\n","Intel Core i7 6700HQ 2.6GHz     43\n","Intel Core i3 7100U 2.4GHz      37\n","Name: count, dtype: int64\n","\n","Summary of gpu:\n","gpu\n","Intel HD Graphics 620      281\n","Intel HD Graphics 520      185\n","Intel UHD Graphics 620      68\n","Nvidia GeForce GTX 1050     66\n","Nvidia GeForce GTX 1060     48\n","Nvidia GeForce 940MX        43\n","AMD Radeon 530              41\n","Intel HD Graphics 500       39\n","Intel HD Graphics 400       37\n","Nvidia GeForce GTX 1070     30\n","Name: count, dtype: int64\n","\n","Summary of memory:\n","memory\n","256GB SSD               412\n","1TB HDD                 223\n","500GB HDD               132\n","512GB SSD               118\n","128GB SSD +  1TB HDD     94\n","128GB SSD                76\n","256GB SSD +  1TB HDD     73\n","32GB Flash Storage       38\n","2TB HDD                  16\n","64GB Flash Storage       15\n","Name: count, dtype: int64\n","\n","Summary of screenresolution:\n","screenresolution\n","Full HD 1920x1080                                507\n","1366x768                                         281\n","IPS Panel Full HD 1920x1080                      230\n","IPS Panel Full HD / Touchscreen 1920x1080         53\n","Full HD / Touchscreen 1920x1080                   47\n","1600x900                                          23\n","Touchscreen 1366x768                              16\n","Quad HD+ / Touchscreen 3200x1800                  15\n","IPS Panel 4K Ultra HD 3840x2160                   12\n","IPS Panel 4K Ultra HD / Touchscreen 3840x2160     11\n","Name: count, dtype: int64\n","\n"]}]},{"cell_type":"code","source":["# Group by company and calculate the mean price\n","df.groupby('company')['price_euros'].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":711},"id":"i81b2qbSYQ8-","executionInfo":{"status":"ok","timestamp":1755429308299,"user_tz":-60,"elapsed":93,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"16c317b8-ced2-4938-b54a-14a3152d970a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["company\n","Acer          626.775825\n","Apple        1564.198571\n","Asus         1104.169367\n","Chuwi         314.296667\n","Dell         1186.068990\n","Fujitsu       729.000000\n","Google       1677.666667\n","HP           1067.774854\n","Huawei       1424.000000\n","LG           2099.000000\n","Lenovo       1086.384444\n","MSI          1728.908148\n","Mediacom      295.000000\n","Microsoft    1612.308333\n","Razer        3346.142857\n","Samsung      1413.444444\n","Toshiba      1267.812500\n","Vero          217.425000\n","Xiaomi       1133.462500\n","Name: price_euros, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price_euros</th>\n","    </tr>\n","    <tr>\n","      <th>company</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Acer</th>\n","      <td>626.775825</td>\n","    </tr>\n","    <tr>\n","      <th>Apple</th>\n","      <td>1564.198571</td>\n","    </tr>\n","    <tr>\n","      <th>Asus</th>\n","      <td>1104.169367</td>\n","    </tr>\n","    <tr>\n","      <th>Chuwi</th>\n","      <td>314.296667</td>\n","    </tr>\n","    <tr>\n","      <th>Dell</th>\n","      <td>1186.068990</td>\n","    </tr>\n","    <tr>\n","      <th>Fujitsu</th>\n","      <td>729.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Google</th>\n","      <td>1677.666667</td>\n","    </tr>\n","    <tr>\n","      <th>HP</th>\n","      <td>1067.774854</td>\n","    </tr>\n","    <tr>\n","      <th>Huawei</th>\n","      <td>1424.000000</td>\n","    </tr>\n","    <tr>\n","      <th>LG</th>\n","      <td>2099.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Lenovo</th>\n","      <td>1086.384444</td>\n","    </tr>\n","    <tr>\n","      <th>MSI</th>\n","      <td>1728.908148</td>\n","    </tr>\n","    <tr>\n","      <th>Mediacom</th>\n","      <td>295.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Microsoft</th>\n","      <td>1612.308333</td>\n","    </tr>\n","    <tr>\n","      <th>Razer</th>\n","      <td>3346.142857</td>\n","    </tr>\n","    <tr>\n","      <th>Samsung</th>\n","      <td>1413.444444</td>\n","    </tr>\n","    <tr>\n","      <th>Toshiba</th>\n","      <td>1267.812500</td>\n","    </tr>\n","    <tr>\n","      <th>Vero</th>\n","      <td>217.425000</td>\n","    </tr>\n","    <tr>\n","      <th>Xiaomi</th>\n","      <td>1133.462500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["# Group by product and calculate the mean weight\n","df.groupby('product')['weight_kg'].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"8ru0YIc8aAN3","executionInfo":{"status":"ok","timestamp":1755429310760,"user_tz":-60,"elapsed":91,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"bcccf790-0cf5-4e47-8eaf-b340d714e676"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["product\n","110-15ACL (A6-7310/4GB/500GB/W10)      2.19\n","14-am079na (N3710/8GB/2TB/W10)         1.94\n","15-AC110nv (i7-6500U/6GB/1TB/Radeon    2.19\n","15-AY023na (N3710/8GB/2TB/W10)         2.04\n","15-BA015wm (E2-7110/4GB/500GB/W10)     1.86\n","                                       ... \n","Zenbook UX330UA-AH5Q                   1.20\n","Zenbook UX390UA                        0.91\n","Zenbook UX410UA-GV027T                 2.00\n","Zenbook UX430UA                        1.25\n","Zenbook UX510UW-FI095T                 2.00\n","Name: weight_kg, Length: 618, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>weight_kg</th>\n","    </tr>\n","    <tr>\n","      <th>product</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>110-15ACL (A6-7310/4GB/500GB/W10)</th>\n","      <td>2.19</td>\n","    </tr>\n","    <tr>\n","      <th>14-am079na (N3710/8GB/2TB/W10)</th>\n","      <td>1.94</td>\n","    </tr>\n","    <tr>\n","      <th>15-AC110nv (i7-6500U/6GB/1TB/Radeon</th>\n","      <td>2.19</td>\n","    </tr>\n","    <tr>\n","      <th>15-AY023na (N3710/8GB/2TB/W10)</th>\n","      <td>2.04</td>\n","    </tr>\n","    <tr>\n","      <th>15-BA015wm (E2-7110/4GB/500GB/W10)</th>\n","      <td>1.86</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Zenbook UX330UA-AH5Q</th>\n","      <td>1.20</td>\n","    </tr>\n","    <tr>\n","      <th>Zenbook UX390UA</th>\n","      <td>0.91</td>\n","    </tr>\n","    <tr>\n","      <th>Zenbook UX410UA-GV027T</th>\n","      <td>2.00</td>\n","    </tr>\n","    <tr>\n","      <th>Zenbook UX430UA</th>\n","      <td>1.25</td>\n","    </tr>\n","    <tr>\n","      <th>Zenbook UX510UW-FI095T</th>\n","      <td>2.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>618 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# Group by product and sum the price, then select the top 10\n","df.groupby('product')['price_euros'].sum().nlargest(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"HdsSVrljY-es","executionInfo":{"status":"ok","timestamp":1755429313455,"user_tz":-60,"elapsed":120,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"a2ec4cdf-ee6c-4779-9983-5f339c16b775"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["product\n","XPS 13                49847.00\n","Alienware 17          43716.58\n","ThinkPad X1           27024.64\n","Blade Pro             20595.00\n","MacBook Pro           20055.13\n","Legion Y520-15IKBN    19837.00\n","XPS 15                19010.10\n","EliteBook 840         17842.37\n","Inspiron 5570         16231.95\n","Inspiron 3567         16197.94\n","Name: price_euros, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price_euros</th>\n","    </tr>\n","    <tr>\n","      <th>product</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>XPS 13</th>\n","      <td>49847.00</td>\n","    </tr>\n","    <tr>\n","      <th>Alienware 17</th>\n","      <td>43716.58</td>\n","    </tr>\n","    <tr>\n","      <th>ThinkPad X1</th>\n","      <td>27024.64</td>\n","    </tr>\n","    <tr>\n","      <th>Blade Pro</th>\n","      <td>20595.00</td>\n","    </tr>\n","    <tr>\n","      <th>MacBook Pro</th>\n","      <td>20055.13</td>\n","    </tr>\n","    <tr>\n","      <th>Legion Y520-15IKBN</th>\n","      <td>19837.00</td>\n","    </tr>\n","    <tr>\n","      <th>XPS 15</th>\n","      <td>19010.10</td>\n","    </tr>\n","    <tr>\n","      <th>EliteBook 840</th>\n","      <td>17842.37</td>\n","    </tr>\n","    <tr>\n","      <th>Inspiron 5570</th>\n","      <td>16231.95</td>\n","    </tr>\n","    <tr>\n","      <th>Inspiron 3567</th>\n","      <td>16197.94</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# Calculate the correlation matrix for the selected numerical columns\n","df[['inches', 'price_euros', 'weight_kg', 'ram_gb']].corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":194},"id":"BqFAF1FKuUAb","executionInfo":{"status":"ok","timestamp":1755429316558,"user_tz":-60,"elapsed":131,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"ae8a194f-cbd3-46d1-b60a-367b11355454"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               inches  price_euros  weight_kg    ram_gb\n","inches       1.000000     0.068197   0.827631  0.237993\n","price_euros  0.068197     1.000000   0.210370  0.743007\n","weight_kg    0.827631     0.210370   1.000000  0.383874\n","ram_gb       0.237993     0.743007   0.383874  1.000000"],"text/html":["\n","  <div id=\"df-f96ba34a-ffd9-4288-9af3-e6a40b72d3be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>inches</th>\n","      <th>price_euros</th>\n","      <th>weight_kg</th>\n","      <th>ram_gb</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>inches</th>\n","      <td>1.000000</td>\n","      <td>0.068197</td>\n","      <td>0.827631</td>\n","      <td>0.237993</td>\n","    </tr>\n","    <tr>\n","      <th>price_euros</th>\n","      <td>0.068197</td>\n","      <td>1.000000</td>\n","      <td>0.210370</td>\n","      <td>0.743007</td>\n","    </tr>\n","    <tr>\n","      <th>weight_kg</th>\n","      <td>0.827631</td>\n","      <td>0.210370</td>\n","      <td>1.000000</td>\n","      <td>0.383874</td>\n","    </tr>\n","    <tr>\n","      <th>ram_gb</th>\n","      <td>0.237993</td>\n","      <td>0.743007</td>\n","      <td>0.383874</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f96ba34a-ffd9-4288-9af3-e6a40b72d3be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f96ba34a-ffd9-4288-9af3-e6a40b72d3be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f96ba34a-ffd9-4288-9af3-e6a40b72d3be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-2da990ab-d642-497d-912b-f21bf3c224f4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2da990ab-d642-497d-912b-f21bf3c224f4')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-2da990ab-d642-497d-912b-f21bf3c224f4 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[['inches', 'price_euros', 'weight_kg', 'ram_gb']]\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"inches\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4501729456007205,\n        \"min\": 0.06819666592963958,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.06819666592963958,\n          0.23799279696514097,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price_euros\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4394223046308238,\n        \"min\": 0.06819666592963958,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          0.7430071352506946,\n          0.06819666592963958\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight_kg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.36978299393334013,\n        \"min\": 0.21036979891687155,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.21036979891687155,\n          0.38387409345028006,\n          0.8276310951937229\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ram_gb\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34539938464790015,\n        \"min\": 0.23799279696514097,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.7430071352506946,\n          1.0,\n          0.23799279696514097\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# Create a histogram to visualize the distribution of screen sizes\n","plt.figure(figsize=(8, 6))\n","sns.histplot(df['inches'], kde=True)\n","plt.title('Distribution of Screen Sizes')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"8YJs1pL41DuC","executionInfo":{"status":"ok","timestamp":1755430916697,"user_tz":-60,"elapsed":583,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"ebe3b133-7062-4459-a92b-6e663da67e92"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Create a box plot to visualize the price distribution by laptop type\n","plt.figure(figsize = (8,6))\n","sns.boxplot(x='typename', y='price_euros', data=df)\n","plt.title('Price Distribution by Laptop Type')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"mBrHKnKN1IXh","executionInfo":{"status":"ok","timestamp":1755430960169,"user_tz":-60,"elapsed":323,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"2cb408ed-5a96-4d3d-f26b-fb57c68f6dc6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Create a scatter plot to visualize the relationship between weight and price\n","plt.figure(figsize=(8,6))\n","sns.scatterplot(x='weight_kg', y='price_euros', data=df)\n","plt.title('Relationship between Weight and Price')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"pBzaOhyR1Ly7","executionInfo":{"status":"ok","timestamp":1755431099964,"user_tz":-60,"elapsed":1693,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"beabf1a3-a511-457d-c1cc-a5aa9872e5c3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Create a count plot to visualize the distribution of laptops by company\n","plt.figure(figsize=(10,6))\n","sns.countplot(x='company', data=df)\n","plt.title('Distribution of Laptops by Company')\n","# Rotate x-axis labels for better readability\n","plt.xticks(rotation = 45, ha='right')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":305},"id":"JrTfJ5ZJ1Okz","executionInfo":{"status":"ok","timestamp":1755431284950,"user_tz":-60,"elapsed":492,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"9acaeca2-9038-456c-f7c1-e7d28bc6f39b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Create a scatter plot to visualize the relationship between screen size and price\n","plt.figure(figsize=(10,6))\n","sns.scatterplot(x='inches', y='price_euros', data=df)\n","plt.title('Relationship between Screen Size and Price')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"CDERJFRo-A8G","executionInfo":{"status":"ok","timestamp":1755433196882,"user_tz":-60,"elapsed":648,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"72a778d4-7ff2-4afa-cd76-02d35af57ea1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Select only the numerical columns for correlation analysis\n","numerical_col = ['inches', 'weight_kg', 'price_euros']\n","df_num= df[numerical_col]\n","\n","# Calculate the correlation matrix\n","corr_matrix = df_num.corr()\n","\n","# Create a heatmap to visualize the correlation matrix\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', square=True)\n","plt.title('Correlation Matrix')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":385},"id":"cHkVo4tCEcfL","executionInfo":{"status":"ok","timestamp":1755436033370,"user_tz":-60,"elapsed":953,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"1b29149e-e25b-4a2a-f771-6bfd4ede3d5d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\n","from sklearn.metrics import mean_absolute_error, mean_squared_error\n","from sklearn.impute import SimpleImputer\n","\n","# Define features (X) and target (y)\n","X = df.drop('price_euros', axis=1)\n","y = df['price_euros']\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=20)"],"metadata":{"id":"vi2T5i1ZJC16"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Define numerical and categorical columns\n","num_cols = ['inches', 'weight_kg', 'ram_gb']\n","cat_cols = ['company', 'typename', 'opsys', 'cpu', 'gpu', 'laptop_id', 'memory', 'product', 'screenresolution']\n","\n","# Define the preprocessing pipeline for numerical features\n","num_transformer = Pipeline(steps=[\n","    ('imputer', SimpleImputer(strategy='median')), # Impute missing numerical values with the median\n","    ('scaler', StandardScaler())]) # Scale numerical features\n","\n","# Define the preprocessing pipeline for categorical features\n","cat_transformer = Pipeline(steps=[\n","    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')), # Impute missing categorical values with a constant 'missing'\n","    ('onehot', OneHotEncoder(handle_unknown='ignore'))]) # Apply one-hot encoding to categorical features\n","\n","# Create a column transformer to apply different preprocessing steps to different columns\n","preprocessor = ColumnTransformer(\n","    transformers=[\n","        ('num', num_transformer, num_cols), # Apply numerical transformer to numerical columns\n","        ('cat', cat_transformer, cat_cols)]) # Apply categorical transformer to categorical columns\n","\n","# Fit the preprocessor on the training data and transform both training and test data\n","X_train_prep = preprocessor.fit_transform(X_train)\n","X_test_prep = preprocessor.transform(X_test)"],"metadata":{"id":"AscTJQFSKgEy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Define the models to be evaluated\n","models = {\n","    'Random Forest': RandomForestRegressor(n_estimators=100, random_state=20),\n","    'Gradient Boosting': GradientBoostingRegressor(n_estimators=100, random_state=20)\n","}\n","\n","# Evaluate each model\n","for name, model in models.items():\n","    # Fit the model to the preprocessed training data\n","    model.fit(X_train_prep, y_train)\n","\n","    # Make predictions on the preprocessed test data\n","    y_pred = model.predict(X_test_prep)\n","\n","    # Calculate Mean Absolute Error (MAE)\n","    mae = mean_absolute_error(y_test, y_pred)\n","\n","    # Calculate Mean Squared Error (MSE)\n","    mse = mean_squared_error(y_test, y_pred)\n","\n","    # Print the model name and its evaluation metrics\n","    print(f'Model: {name}')\n","    print(f'MAE: {mae:.2f}')\n","    print(f'MSE: {mse:.2f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D9wTsZXcLk94","executionInfo":{"status":"ok","timestamp":1755436851540,"user_tz":-60,"elapsed":4892,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"6d6bc695-7079-4f12-ac7e-23e7913a3160"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: Random Forest\n","MAE: 209.31\n","MSE: 121229.37\n","Model: Gradient Boosting\n","MAE: 227.19\n","MSE: 110961.17\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import RandomizedSearchCV\n","\n","# Define the hyperparameter grid for the Random Forest Regressor\n","param_grid = {\n","    'n_estimators': [50, 100, 200], # Number of trees in the forest\n","    'max_depth': [None, 5, 10], # Maximum depth of the trees\n","    'min_samples_split': [2, 5, 10], # Minimum number of samples required to split an internal node\n","    'min_samples_leaf': [1, 2, 4] # Minimum number of samples required to be at a leaf node\n","}\n","\n","# Define the Random Forest Regressor model\n","model = RandomForestRegressor(random_state=20)\n","\n","# Perform randomized search to find the best hyperparameters\n","search = RandomizedSearchCV(model, param_grid, cv=5, scoring='neg_mean_absolute_error', n_iter=10, random_state=20)\n","search.fit(X_train_prep, y_train)\n","\n","# Print the best hyperparameters found and the corresponding best score (MAE)\n","print(f'Best Hyperparameters: {search.best_params_}')\n","print(f'Best Score: {-search.best_score_:.2f}') # Convert negative MAE to positive"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"50lB2cFrMmH0","executionInfo":{"status":"ok","timestamp":1755437863438,"user_tz":-60,"elapsed":71243,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"928892b8-15e2-4951-9c1b-d61bce62afc8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Hyperparameters: {'n_estimators': 50, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_depth': None}\n","Best Score: 184.72\n"]}]},{"cell_type":"code","source":["# Get the best estimator from the grid search\n","best_model = search.best_estimator_\n","\n","# Make predictions on the test set using the best model\n","y_pred = best_model.predict(X_test_prep)\n","\n","# Calculate Mean Absolute Error (MAE)\n","mae = mean_absolute_error(y_test, y_pred)\n","# Calculate Mean Squared Error (MSE)\n","mse = mean_squared_error(y_test, y_pred)\n","\n","# Print the MAE and MSE of the best model\n","print(f'Best Model MAE: {mae:.2f}')\n","print(f'Best Model MSE: {mse:.2f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"29aMIXinQ38s","executionInfo":{"status":"ok","timestamp":1755438105471,"user_tz":-60,"elapsed":86,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"25505e81-04e5-43e4-d266-31c0749116b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Best Model MAE: 210.17\n","Best Model MSE: 123012.44\n"]}]},{"cell_type":"code","source":["feature_importances = best_model.feature_importances_\n","feature_names = preprocessor.get_feature_names_out()\n","\n","importance_df = pd.DataFrame({'Feature': feature_names, 'Importance': feature_importances})\n","importance_df = importance_df.sort_values(by='Importance', ascending=False)\n","\n","print(importance_df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LeplEYVnRGTC","executionInfo":{"status":"ok","timestamp":1755438157842,"user_tz":-60,"elapsed":75,"user":{"displayName":"Sitoabasi Akpabot","userId":"04143016887631805627"}},"outputId":"0d374f53-afef-4717-e5ee-a7c6d3b549cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                       Feature  Importance\n","2                  num__ram_gb    0.606469\n","1               num__weight_kg    0.101458\n","25      cat__typename_Notebook    0.025367\n","0                  num__inches    0.019150\n","27   cat__typename_Workstation    0.016148\n","..                         ...         ...\n","755         cat__laptop_id_346    0.000000\n","756         cat__laptop_id_347    0.000000\n","757         cat__laptop_id_348    0.000000\n","758          cat__laptop_id_35    0.000000\n","776          cat__laptop_id_37    0.000000\n","\n","[1978 rows x 2 columns]\n"]}]},{"cell_type":"code","source":["import pickle\n","\n","# Save the best model to a pickle file\n","with open('best_model.pkl', 'wb') as f:\n","    pickle.dump(best_model, f)\n","\n","# Save the preprocessor to a pickle file\n","with open('preprocessor.pkl', 'wb') as f:\n","    pickle.dump(preprocessor, f)"],"metadata":{"id":"X4_L-FsPR4PY"},"execution_count":null,"outputs":[]}]}